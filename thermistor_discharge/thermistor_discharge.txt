COPY PASTE BELOW to ARDUINO IDE AND UPLOAD TO TEENSY TO USE THIS FOLDER

#include <ADC.h>

const int chargePin       = 13;
const int voltageOutPin   = A1;  // ADC0
const int thermistorPin   = A8;  // ADC1 â€” must be from ADC1 for synchronized reads

const uint16_t bufferSize = 8192;
uint16_t readings[bufferSize];
uint16_t thermistorReadings[bufferSize];

const unsigned long chargeTimeMillis     = 100;
const unsigned long sampleIntervalMicros = 20;
const int confirmSamples                 = 5;

ADC *adc = new ADC();

void setup() {
  Serial.begin(115200);
  while (!Serial) {}

  pinMode(chargePin, OUTPUT);
  pinMode(voltageOutPin, INPUT);
  pinMode(thermistorPin, INPUT);

  // Configure both ADCs
  adc->adc0->setAveraging(1);
  adc->adc0->setResolution(10);
  adc->adc0->setConversionSpeed(ADC_CONVERSION_SPEED::VERY_HIGH_SPEED);
  adc->adc0->setSamplingSpeed(ADC_SAMPLING_SPEED::VERY_HIGH_SPEED);

  adc->adc1->setAveraging(1);
  adc->adc1->setResolution(10);
  adc->adc1->setConversionSpeed(ADC_CONVERSION_SPEED::VERY_HIGH_SPEED);
  adc->adc1->setSamplingSpeed(ADC_SAMPLING_SPEED::VERY_HIGH_SPEED);
}

void loop() {
  if (Serial.available()) {
    if (Serial.read() == 'S') {
      digitalWrite(chargePin, HIGH);
      delay(chargeTimeMillis);

      unsigned long t0 = micros();

      for (uint16_t i = 0; i < bufferSize; ++i) {
        adc->startSynchronizedSingleRead(voltageOutPin, thermistorPin);
        while (adc->adc0->isConverting() || adc->adc1->isConverting());

        readings[i] = adc->adc0->readSingle();
        thermistorReadings[i] = adc->adc1->readSingle();

        if (i == confirmSamples - 1) {
          digitalWrite(chargePin, LOW);  // begin discharge
        }
      }

      unsigned long t1 = micros();
      unsigned long totalTime = t1 - t0;

      Serial.write(reinterpret_cast<const uint8_t*>(readings),
                   bufferSize * sizeof(uint16_t));

      Serial.write(reinterpret_cast<const uint8_t*>(thermistorReadings),
                   bufferSize * sizeof(uint16_t));

      Serial.write(reinterpret_cast<const uint8_t*>(&totalTime), sizeof(uint32_t));

      pinMode(chargePin, OUTPUT);  // prepare for next run
    }

    while (Serial.available()) Serial.read();  // flush garbage
  }
}
